{"version":3,"sources":["redux/flatsReducer.js","components/Flat.jsx","components/FlatList.jsx","App.js","redux/flatsAsyncActions.js","redux/rootReducer.js","index.js"],"names":["flatsSlice","createSlice","name","initialState","flats","reducers","setFlats","state","action","payload","likeFlat","flat","find","el","id","like","actions","Flat","dispatch","useDispatch","attributes","title","rooms","address","area","unit","flatLikeClasses","push","className","street","house","room","join","onClick","e","preventDefault","FlatList","useSelector","map","App","useEffect","rootReducer","combineReducers","flatsReducer","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"s/DAMMA,EAAaC,YAAY,CAC7BC,KAAM,QACNC,aANmB,CACnBC,MAAO,IAMPC,SAAU,CACRC,SADQ,SACCC,EAAOC,GACdD,EAAMH,MAAQI,EAAOC,SAGvBC,SALQ,SAKCH,EAAOC,GACd,IAAMG,EAAOJ,EAAMH,MAAMQ,MAAK,SAAAC,GAAE,OAAIA,EAAGC,KAAON,EAAOC,WACrDE,EAAKI,MAAQJ,EAAKI,SAOjB,EAA6Bf,EAAWgB,QAAjCV,EAAP,EAAOA,SAAUI,EAAjB,EAAiBA,SACTV,IAAf,Q,eCnBaiB,EAAO,SAAC,GAAY,IAAXN,EAAU,EAAVA,KACdO,EAAWC,cAEjB,GAAKR,EAAL,CAIA,MAA4CA,EAAKS,WAA1CC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,QAASC,EAA9B,EAA8BA,KAAMC,EAApC,EAAoCA,KAQ9BC,EAAkB,CAAC,aAMzB,OAJIf,EAAKI,MACPW,EAAgBC,KAAK,qBAIrB,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,cAAf,SACGP,IAEH,sBAAKO,UAAU,cAAf,mDACWN,EADX,IACkB,qCAAQE,EAAR,IAAeC,EAAf,UAElB,sBAAKG,UAAU,gBAAf,0DACaL,EAAQM,OADrB,YACiCN,EAAQO,MADzC,kBACqDP,EAAQQ,QAE7D,qBAAKH,UAAU,cAAf,gDAIF,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAWF,EAAgBM,KAAK,KAAMC,QA7BtB,SAACC,GAC1BA,EAAEC,iBAEFjB,EAASR,EAASC,EAAKG,MA0BnB,qECtCKsB,G,MAAW,WACtB,IAAOhC,EAASiC,aAAY,SAAA9B,GAAK,OAAIA,EAAMH,SAApCA,MACP,OACE,qBAAKwB,UAAU,YAAf,SACGxB,EAAMkC,KAAI,SAAA3B,GAAI,OAAI,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKG,W,uBCY1ByB,MAff,WACE,IAAMrB,EAAWC,cAOjB,OALAqB,qBAAU,WACRtB,GCNK,SAACA,GACNA,EAASZ,EAASF,IAAekC,KAAI,SAAAzB,GAAE,kCAASA,GAAT,IAAaE,MAAM,cDOzD,IAGD,qBAAKa,UAAU,MAAf,SACE,cAAC,EAAD,OEbOa,EAAcC,YAAgB,CACzCtC,MAAOuC,ICKHC,G,MAAQC,YAAYJ,EAAaK,YACrCC,YAAgBC,QAIlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.dcbfb325.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  flats: []\r\n};\r\n\r\nconst flatsSlice = createSlice({\r\n  name: \"flats\",\r\n  initialState,\r\n  reducers: {\r\n    setFlats(state, action) {\r\n      state.flats = action.payload;\r\n    },\r\n\r\n    likeFlat(state, action) {\r\n      const flat = state.flats.find(el => el.id === action.payload);\r\n      flat.like = !flat.like;\r\n    }\r\n    // загрузка данных\r\n    // изменить значение лайка\r\n  }\r\n});\r\n\r\nexport const {setFlats, likeFlat} = flatsSlice.actions;\r\nexport default flatsSlice.reducer;","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {likeFlat} from \"../redux/flatsReducer\";\r\nimport \"./Flat.scss\";\r\n\r\nexport const Flat = ({flat}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  if (!flat) {\r\n    return;\r\n  }\r\n\r\n  const {title, rooms, address, area, unit} = flat.attributes;\r\n\r\n  const onLikeClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(likeFlat(flat.id));\r\n  }\r\n\r\n  const flatLikeClasses = ['flat-like'];\r\n\r\n  if (flat.like) {\r\n    flatLikeClasses.push('flat-like--active');\r\n  }\r\n\r\n  return (\r\n    <div className=\"flat\">\r\n      <div className=\"flat__info\">\r\n        <div className=\"flat__title\">\r\n          {title}\r\n        </div>\r\n        <div className=\"flat__rooms\">\r\n          Комнат: {rooms} <span>({area} {unit})</span>\r\n        </div>\r\n        <div className=\"flat__address\">\r\n          Адрес: ул.{address.street}, д.{address.house}, кв.{address.room}\r\n        </div>\r\n        <div className=\"flat__agent\">\r\n          Агент:\r\n        </div>\r\n      </div>\r\n      <div className=\"flat__like\">\r\n        <div className={flatLikeClasses.join(\" \")} onClick={onLikeClickHandler}>\r\n          Нравится\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n//{\"flat-like\": true, \"flat-like--active\": flat.liked}","import React from \"react\";\r\nimport {Flat} from \"./Flat\";\r\nimport \"./FlatList.scss\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport const FlatList = () => {\r\n  const {flats} = useSelector(state => state.flats);\r\n  return (\r\n    <div className=\"flat-list\">\r\n      {flats.map(flat => <Flat key={flat.id} flat={flat}/>)}\r\n    </div>\r\n  )\r\n}","import React, {useEffect} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {FlatList} from \"./components/FlatList\";\nimport './App.scss';\nimport {loadFlats} from \"./redux/flatsAsyncActions\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadFlats());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <FlatList/>\n    </div>\n  );\n}\n\nexport default App;\n","import {setFlats} from \"./flatsReducer\";\r\nimport * as flats from \"../data/entities.json\";\r\n\r\nexport function loadFlats() {\r\n  return (dispatch) => {\r\n    dispatch(setFlats(flats.response.map(el => ({...el, like: false}))));\r\n  };\r\n}","import {combineReducers} from \"redux\";\r\nimport flatsReducer from \"./flatsReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  flats: flatsReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport App from './App';\nimport {rootReducer} from \"./redux/rootReducer\";\nimport './index.css';\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(thunk),\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}